/*
 * This file is generated by jOOQ.
 */
package edu.trucktrack.jooq;


import edu.trucktrack.jooq.tables.Company;
import edu.trucktrack.jooq.tables.Currency;
import edu.trucktrack.jooq.tables.Employee;
import edu.trucktrack.jooq.tables.EmployeeExpenses;
import edu.trucktrack.jooq.tables.EmployeeExpensesTag;
import edu.trucktrack.jooq.tables.SalaryType;
import edu.trucktrack.jooq.tables.Tag;
import edu.trucktrack.jooq.tables.Truck;
import edu.trucktrack.jooq.tables.WorkTrip;
import edu.trucktrack.jooq.tables.WorkTripCargoHistory;
import edu.trucktrack.jooq.tables.WorkTripSalaryHistory;
import edu.trucktrack.jooq.tables.record.CompanyRecord;
import edu.trucktrack.jooq.tables.record.CurrencyRecord;
import edu.trucktrack.jooq.tables.record.EmployeeExpensesRecord;
import edu.trucktrack.jooq.tables.record.EmployeeExpensesTagRecord;
import edu.trucktrack.jooq.tables.record.EmployeeRecord;
import edu.trucktrack.jooq.tables.record.SalaryTypeRecord;
import edu.trucktrack.jooq.tables.record.TagRecord;
import edu.trucktrack.jooq.tables.record.TruckRecord;
import edu.trucktrack.jooq.tables.record.WorkTripCargoHistoryRecord;
import edu.trucktrack.jooq.tables.record.WorkTripRecord;
import edu.trucktrack.jooq.tables.record.WorkTripSalaryHistoryRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CompanyRecord> COMPANY_PKEY = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_pkey"), new TableField[] { Company.COMPANY.ID }, true);
    public static final UniqueKey<CurrencyRecord> CURRENCY_PKEY = Internal.createUniqueKey(Currency.CURRENCY, DSL.name("currency_pkey"), new TableField[] { Currency.CURRENCY.ID }, true);
    public static final UniqueKey<EmployeeRecord> EMPLOYEE_PKEY = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("employee_pkey"), new TableField[] { Employee.EMPLOYEE.ID }, true);
    public static final UniqueKey<EmployeeExpensesRecord> EMPLOYEE_EXPENSES_PKEY = Internal.createUniqueKey(EmployeeExpenses.EMPLOYEE_EXPENSES, DSL.name("employee_expenses_pkey"), new TableField[] { EmployeeExpenses.EMPLOYEE_EXPENSES.ID }, true);
    public static final UniqueKey<EmployeeExpensesTagRecord> EMPLOYEE_EXPENSES_TAG_PKEY = Internal.createUniqueKey(EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG, DSL.name("employee_expenses_tag_pkey"), new TableField[] { EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG.ID }, true);
    public static final UniqueKey<SalaryTypeRecord> SALARY_TYPE_PKEY = Internal.createUniqueKey(SalaryType.SALARY_TYPE, DSL.name("salary_type_pkey"), new TableField[] { SalaryType.SALARY_TYPE.ID }, true);
    public static final UniqueKey<TagRecord> TAG_PKEY = Internal.createUniqueKey(Tag.TAG, DSL.name("tag_pkey"), new TableField[] { Tag.TAG.ID }, true);
    public static final UniqueKey<TruckRecord> TRUCK_PKEY = Internal.createUniqueKey(Truck.TRUCK, DSL.name("truck_pkey"), new TableField[] { Truck.TRUCK.ID }, true);
    public static final UniqueKey<WorkTripRecord> WORK_TRIP_PKEY = Internal.createUniqueKey(WorkTrip.WORK_TRIP, DSL.name("work_trip_pkey"), new TableField[] { WorkTrip.WORK_TRIP.ID }, true);
    public static final UniqueKey<WorkTripCargoHistoryRecord> WORK_TRIP_CARGO_HISTORY_PKEY = Internal.createUniqueKey(WorkTripCargoHistory.WORK_TRIP_CARGO_HISTORY, DSL.name("work_trip_cargo_history_pkey"), new TableField[] { WorkTripCargoHistory.WORK_TRIP_CARGO_HISTORY.ID }, true);
    public static final UniqueKey<WorkTripSalaryHistoryRecord> WORK_TRIP_SALARY_HISTORY_PKEY = Internal.createUniqueKey(WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY, DSL.name("work_trip_salary_history_pkey"), new TableField[] { WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EmployeeRecord, CompanyRecord> EMPLOYEE__FK_EMPLOYEE_COMPANY_ID = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("fk_employee_company_id"), new TableField[] { Employee.EMPLOYEE.COMPANY_ID }, Keys.COMPANY_PKEY, new TableField[] { Company.COMPANY.ID }, true);
    public static final ForeignKey<EmployeeRecord, CurrencyRecord> EMPLOYEE__FK_EMPLOYEE_CURRENCY_ID = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("fk_employee_currency_id"), new TableField[] { Employee.EMPLOYEE.CURRENCY_ID }, Keys.CURRENCY_PKEY, new TableField[] { Currency.CURRENCY.ID }, true);
    public static final ForeignKey<EmployeeExpensesRecord, CurrencyRecord> EMPLOYEE_EXPENSES__FK_EMPLOYEE_EXPENSES_CURRENCY_ID = Internal.createForeignKey(EmployeeExpenses.EMPLOYEE_EXPENSES, DSL.name("fk_employee_expenses_currency_id"), new TableField[] { EmployeeExpenses.EMPLOYEE_EXPENSES.CURRENCY_ID }, Keys.CURRENCY_PKEY, new TableField[] { Currency.CURRENCY.ID }, true);
    public static final ForeignKey<EmployeeExpensesRecord, EmployeeRecord> EMPLOYEE_EXPENSES__FK_EMPLOYEE_EXPENSES_EMPLOYEE_ID = Internal.createForeignKey(EmployeeExpenses.EMPLOYEE_EXPENSES, DSL.name("fk_employee_expenses_employee_id"), new TableField[] { EmployeeExpenses.EMPLOYEE_EXPENSES.EMPLOYEE_ID }, Keys.EMPLOYEE_PKEY, new TableField[] { Employee.EMPLOYEE.ID }, true);
    public static final ForeignKey<EmployeeExpensesRecord, WorkTripRecord> EMPLOYEE_EXPENSES__FK_EMPLOYEE_EXPENSES_TRIP_ID = Internal.createForeignKey(EmployeeExpenses.EMPLOYEE_EXPENSES, DSL.name("fk_employee_expenses_trip_id"), new TableField[] { EmployeeExpenses.EMPLOYEE_EXPENSES.TRIP_ID }, Keys.WORK_TRIP_PKEY, new TableField[] { WorkTrip.WORK_TRIP.ID }, true);
    public static final ForeignKey<EmployeeExpensesTagRecord, EmployeeExpensesRecord> EMPLOYEE_EXPENSES_TAG__FK_EMPLOYEE_EXPENSES_TAG_EXPENSE_ID = Internal.createForeignKey(EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG, DSL.name("fk_employee_expenses_tag_expense_id"), new TableField[] { EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG.EXPENSE_ID }, Keys.EMPLOYEE_EXPENSES_PKEY, new TableField[] { EmployeeExpenses.EMPLOYEE_EXPENSES.ID }, true);
    public static final ForeignKey<EmployeeExpensesTagRecord, TagRecord> EMPLOYEE_EXPENSES_TAG__FK_EMPLOYEE_EXPENSES_TAG_TAG_ID = Internal.createForeignKey(EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG, DSL.name("fk_employee_expenses_tag_tag_id"), new TableField[] { EmployeeExpensesTag.EMPLOYEE_EXPENSES_TAG.TAG_ID }, Keys.TAG_PKEY, new TableField[] { Tag.TAG.ID }, true);
    public static final ForeignKey<TagRecord, EmployeeRecord> TAG__FK_TAG_CREATED_BY_EMPLOYEE_ID = Internal.createForeignKey(Tag.TAG, DSL.name("fk_tag_created_by_employee_id"), new TableField[] { Tag.TAG.CREATED_BY_EMPLOYEE_ID }, Keys.EMPLOYEE_PKEY, new TableField[] { Employee.EMPLOYEE.ID }, true);
    public static final ForeignKey<TruckRecord, EmployeeRecord> TRUCK__FK_TRUCK_EMPLOYEE_ID = Internal.createForeignKey(Truck.TRUCK, DSL.name("fk_truck_employee_id"), new TableField[] { Truck.TRUCK.EMPLOYEE_ID }, Keys.EMPLOYEE_PKEY, new TableField[] { Employee.EMPLOYEE.ID }, true);
    public static final ForeignKey<WorkTripRecord, CurrencyRecord> WORK_TRIP__FK_WORK_TRIP_CURRENCY_ID = Internal.createForeignKey(WorkTrip.WORK_TRIP, DSL.name("fk_work_trip_currency_id"), new TableField[] { WorkTrip.WORK_TRIP.TRUCK_ID }, Keys.CURRENCY_PKEY, new TableField[] { Currency.CURRENCY.ID }, true);
    public static final ForeignKey<WorkTripRecord, EmployeeRecord> WORK_TRIP__FK_WORK_TRIP_EMPLOYEE_ID = Internal.createForeignKey(WorkTrip.WORK_TRIP, DSL.name("fk_work_trip_employee_id"), new TableField[] { WorkTrip.WORK_TRIP.EMPLOYEE_ID }, Keys.EMPLOYEE_PKEY, new TableField[] { Employee.EMPLOYEE.ID }, true);
    public static final ForeignKey<WorkTripRecord, TruckRecord> WORK_TRIP__FK_WORK_TRIP_TRUCK_ID = Internal.createForeignKey(WorkTrip.WORK_TRIP, DSL.name("fk_work_trip_truck_id"), new TableField[] { WorkTrip.WORK_TRIP.TRUCK_ID }, Keys.TRUCK_PKEY, new TableField[] { Truck.TRUCK.ID }, true);
    public static final ForeignKey<WorkTripCargoHistoryRecord, WorkTripRecord> WORK_TRIP_CARGO_HISTORY__FK_CARGO_HISTORY_TRIP_ID = Internal.createForeignKey(WorkTripCargoHistory.WORK_TRIP_CARGO_HISTORY, DSL.name("fk_cargo_history_trip_id"), new TableField[] { WorkTripCargoHistory.WORK_TRIP_CARGO_HISTORY.TRIP_ID }, Keys.WORK_TRIP_PKEY, new TableField[] { WorkTrip.WORK_TRIP.ID }, true);
    public static final ForeignKey<WorkTripSalaryHistoryRecord, SalaryTypeRecord> WORK_TRIP_SALARY_HISTORY__FK_SALARY_HISTORY_SALARY_TYPE = Internal.createForeignKey(WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY, DSL.name("fk_salary_history_salary_type"), new TableField[] { WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY.SALARY_TYPE }, Keys.SALARY_TYPE_PKEY, new TableField[] { SalaryType.SALARY_TYPE.ID }, true);
    public static final ForeignKey<WorkTripSalaryHistoryRecord, WorkTripRecord> WORK_TRIP_SALARY_HISTORY__FK_SALARY_HISTORY_TRIP_ID = Internal.createForeignKey(WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY, DSL.name("fk_salary_history_trip_id"), new TableField[] { WorkTripSalaryHistory.WORK_TRIP_SALARY_HISTORY.TRIP_ID }, Keys.WORK_TRIP_PKEY, new TableField[] { WorkTrip.WORK_TRIP.ID }, true);
}
