/*
 * This file is generated by jOOQ.
 */
package edu.trucktrack.dao.jooq.tables.records;


import edu.trucktrack.dao.jooq.tables.EmployeeExpenses;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeExpensesRecord extends UpdatableRecordImpl<EmployeeExpensesRecord> implements Record8<Long, Integer, Integer, String, String, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employee_expenses.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employee_expenses.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.employee_expenses.employee_id</code>.
     */
    public void setEmployeeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employee_expenses.employee_id</code>.
     */
    public Integer getEmployeeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.employee_expenses.trip_id</code>.
     */
    public void setTripId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employee_expenses.trip_id</code>.
     */
    public Integer getTripId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.employee_expenses.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employee_expenses.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.employee_expenses.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.employee_expenses.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.employee_expenses.value</code>.
     */
    public void setValue(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.employee_expenses.value</code>.
     */
    public Integer getValue() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.employee_expenses.currency_id</code>.
     */
    public void setCurrencyId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.employee_expenses.currency_id</code>.
     */
    public Integer getCurrencyId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.employee_expenses.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.employee_expenses.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, Integer, String, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Integer, Integer, String, String, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.EMPLOYEE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.TRIP_ID;
    }

    @Override
    public Field<String> field4() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.NAME;
    }

    @Override
    public Field<String> field5() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.DESCRIPTION;
    }

    @Override
    public Field<Integer> field6() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.VALUE;
    }

    @Override
    public Field<Integer> field7() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.CURRENCY_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return EmployeeExpenses.EMPLOYEE_EXPENSES.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getEmployeeId();
    }

    @Override
    public Integer component3() {
        return getTripId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer component6() {
        return getValue();
    }

    @Override
    public Integer component7() {
        return getCurrencyId();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getEmployeeId();
    }

    @Override
    public Integer value3() {
        return getTripId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Integer value6() {
        return getValue();
    }

    @Override
    public Integer value7() {
        return getCurrencyId();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public EmployeeExpensesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value2(Integer value) {
        setEmployeeId(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value3(Integer value) {
        setTripId(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value6(Integer value) {
        setValue(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value7(Integer value) {
        setCurrencyId(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EmployeeExpensesRecord values(Long value1, Integer value2, Integer value3, String value4, String value5, Integer value6, Integer value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeExpensesRecord
     */
    public EmployeeExpensesRecord() {
        super(EmployeeExpenses.EMPLOYEE_EXPENSES);
    }

    /**
     * Create a detached, initialised EmployeeExpensesRecord
     */
    public EmployeeExpensesRecord(Long id, Integer employeeId, Integer tripId, String name, String description, Integer value, Integer currencyId, LocalDateTime createdAt) {
        super(EmployeeExpenses.EMPLOYEE_EXPENSES);

        setId(id);
        setEmployeeId(employeeId);
        setTripId(tripId);
        setName(name);
        setDescription(description);
        setValue(value);
        setCurrencyId(currencyId);
        setCreatedAt(createdAt);
    }
}
